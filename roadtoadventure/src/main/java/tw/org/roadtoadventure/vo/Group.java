package tw.org.roadtoadventure.vo;
// Generated 2017/11/3 �W�� 02:21:29 by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Group generated by hbm2java
 */
@Entity
@Table(name = "[Group]", schema = "dbo", catalog = "RoadToAdventure")
public class Group implements java.io.Serializable {

	private Integer groupId;
	private UserAccount userAccountByCreateId;
	private UserAccount userAccountByModifyId;
	private String groupName;
	private String groupPicture;
	private Date createDate;
	private Date modifyDate;
	private Set<GroupJourney> groupJourneys = new HashSet<GroupJourney>(0);
	private Set<UserInGroup> userInGroups = new HashSet<UserInGroup>(0);

	public Group() {
	}

	public Group(UserAccount userAccountByCreateId, String groupName, String groupPicture, Date createDate) {
		this.userAccountByCreateId = userAccountByCreateId;
		this.groupName = groupName;
		this.groupPicture = groupPicture;
		this.createDate = createDate;
	}

	public Group(UserAccount userAccountByCreateId, UserAccount userAccountByModifyId, String groupName,
			String groupPicture, Date createDate, Date modifyDate, Set<GroupJourney> groupJourneys,
			Set<UserInGroup> userInGroups) {
		this.userAccountByCreateId = userAccountByCreateId;
		this.userAccountByModifyId = userAccountByModifyId;
		this.groupName = groupName;
		this.groupPicture = groupPicture;
		this.createDate = createDate;
		this.modifyDate = modifyDate;
		this.groupJourneys = groupJourneys;
		this.userInGroups = userInGroups;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "GroupID", unique = true, nullable = false)
	public Integer getGroupId() {
		return this.groupId;
	}

	public void setGroupId(Integer groupId) {
		this.groupId = groupId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CreateID", nullable = false)
	public UserAccount getUserAccountByCreateId() {
		return this.userAccountByCreateId;
	}

	public void setUserAccountByCreateId(UserAccount userAccountByCreateId) {
		this.userAccountByCreateId = userAccountByCreateId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ModifyID")
	public UserAccount getUserAccountByModifyId() {
		return this.userAccountByModifyId;
	}

	public void setUserAccountByModifyId(UserAccount userAccountByModifyId) {
		this.userAccountByModifyId = userAccountByModifyId;
	}

	@Column(name = "GroupName", nullable = false, length = 50)
	public String getGroupName() {
		return this.groupName;
	}

	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

	@Column(name = "GroupPicture", nullable = false)
	public String getGroupPicture() {
		return this.groupPicture;
	}

	public void setGroupPicture(String groupPicture) {
		this.groupPicture = groupPicture;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreateDate", nullable = false, length = 23)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ModifyDate", length = 23)
	public Date getModifyDate() {
		return this.modifyDate;
	}

	public void setModifyDate(Date modifyDate) {
		this.modifyDate = modifyDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "group")
	public Set<GroupJourney> getGroupJourneys() {
		return this.groupJourneys;
	}

	public void setGroupJourneys(Set<GroupJourney> groupJourneys) {
		this.groupJourneys = groupJourneys;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "group")
	public Set<UserInGroup> getUserInGroups() {
		return this.userInGroups;
	}

	public void setUserInGroups(Set<UserInGroup> userInGroups) {
		this.userInGroups = userInGroups;
	}

}
