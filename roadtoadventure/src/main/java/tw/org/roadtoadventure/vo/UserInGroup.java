package tw.org.roadtoadventure.vo;
// Generated 2017/11/3 �W�� 02:21:29 by Hibernate Tools 5.2.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * UserInGroup generated by hbm2java
 */
@Entity
@Table(name = "UserInGroup", schema = "dbo", catalog = "RoadToAdventure")
public class UserInGroup implements java.io.Serializable {

	private UserInGroupId id;
	private Group group;
	private GroupRole groupRole;
	private UserAccount userAccount;
//	private Set<Authority> authorities = new HashSet<Authority>(0);
	private Set<GroupChat> groupChats = new HashSet<GroupChat>(0);

	public UserInGroup() {
	}

//	public UserInGroup(UserInGroupId id, Group group, GroupRole groupRole, UserAccount userAccount) {
//		this.id = id;
//		this.group = group;
//		this.groupRole = groupRole;
//		this.userAccount = userAccount;
//	}
//
//	public UserInGroup(UserInGroupId id, Group group, GroupRole groupRole, UserAccount userAccount,
//			Set<Authority> authorities, Set<GroupChat> groupChats) {
//		this.id = id;
//		this.group = group;
//		this.groupRole = groupRole;
//		this.userAccount = userAccount;
//		this.authorities = authorities;
//		this.groupChats = groupChats;
//	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "userId", column = @Column(name = "UserID", nullable = false, length = 20)),
			@AttributeOverride(name = "groupId", column = @Column(name = "GroupID", nullable = false)) })
	public UserInGroupId getId() {
		return this.id;
	}

	public void setId(UserInGroupId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GroupID", nullable = false, insertable = false, updatable = false)
	public Group getGroup() {
		return this.group;
	}

	public void setGroup(Group group) {
		this.group = group;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GroupRoleID", nullable = false)
	public GroupRole getGroupRole() {
		return this.groupRole;
	}

	public void setGroupRole(GroupRole groupRole) {
		this.groupRole = groupRole;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UserID", nullable = false, insertable = false, updatable = false)
	public UserAccount getUserAccount() {
		return this.userAccount;
	}

	public void setUserAccount(UserAccount userAccount) {
		this.userAccount = userAccount;
	}

//	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "unresolved")
//	public Set<Authority> getAuthorities() {
//		return this.authorities;
//	}
//
//	public void setAuthorities(Set<Authority> authorities) {
//		this.authorities = authorities;
//	}
//
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userInGroup")
	public Set<GroupChat> getGroupChats() {
		return this.groupChats;
	}

	public void setGroupChats(Set<GroupChat> groupChats) {
		this.groupChats = groupChats;
	}

}
