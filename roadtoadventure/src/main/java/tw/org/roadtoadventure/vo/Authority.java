package tw.org.roadtoadventure.vo;
// Generated 2017/11/3 �W�� 02:21:29 by Hibernate Tools 5.2.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Authority generated by hbm2java
 */
@Entity
@Table(name = "Authority", schema = "dbo", catalog = "RoadToAdventure")
public class Authority implements java.io.Serializable {

	private String authorityId;
	private String authorityName;
	private String memo;
	private Set<GroupRole> groupRoles = new HashSet<GroupRole>(0);
//	private Set<UserInGroup> userInGroups = new HashSet<UserInGroup>(0);
	private Set<UserRole> userRoles = new HashSet<UserRole>(0);

	public Authority() {
	}

//	public Authority(String authorityId, String authorityName) {
//		this.authorityId = authorityId;
//		this.authorityName = authorityName;
//	}
//
//	public Authority(String authorityId, String authorityName, String memo, Set<GroupRole> groupRoles,
//			Set<UserInGroup> userInGroups, Set<UserRole> userRoles) {
//		this.authorityId = authorityId;
//		this.authorityName = authorityName;
//		this.memo = memo;
//		this.groupRoles = groupRoles;
//		this.userInGroups = userInGroups;
//		this.userRoles = userRoles;
//	}

	@Id

	@Column(name = "AuthorityID", unique = true, nullable = false, length = 20)
	public String getAuthorityId() {
		return this.authorityId;
	}

	public void setAuthorityId(String authorityId) {
		this.authorityId = authorityId;
	}

	@Column(name = "AuthorityName", nullable = false, length = 50)
	public String getAuthorityName() {
		return this.authorityName;
	}

	public void setAuthorityName(String authorityName) {
		this.authorityName = authorityName;
	}

	@Column(name = "Memo", length = 50)
	public String getMemo() {
		return this.memo;
	}

	public void setMemo(String memo) {
		this.memo = memo;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "GroupRoleDefaultAuthority", schema = "dbo", catalog = "RoadToAdventure", joinColumns = {
			@JoinColumn(name = "AuthorityID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "GroupRoleID", nullable = false, updatable = false) })
	public Set<GroupRole> getGroupRoles() {
		return this.groupRoles;
	}

	public void setGroupRoles(Set<GroupRole> groupRoles) {
		this.groupRoles = groupRoles;
	}

//	@ManyToMany(fetch = FetchType.LAZY)
//	@JoinTable(name = "GroupRolePersonalAuthority", schema = "dbo", catalog = "RoadToAdventure", joinColumns = {
//			@JoinColumn(name = "AuthorityID", nullable = false, updatable = false) }, inverseJoinColumns = {
//					@JoinColumn(name = "UserID", nullable = false, updatable = false) })
//	public Set<UserInGroup> getUserInGroups() {
//		return this.userInGroups;
//	}
//
//	public void setUserInGroups(Set<UserInGroup> userInGroups) {
//		this.userInGroups = userInGroups;
//	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "UserRoleDefaultAuthority", schema = "dbo", catalog = "RoadToAdventure", joinColumns = {
			@JoinColumn(name = "AuthorityID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "UserRoleID", nullable = false, updatable = false) })
	public Set<UserRole> getUserRoles() {
		return this.userRoles;
	}

	public void setUserRoles(Set<UserRole> userRoles) {
		this.userRoles = userRoles;
	}

}
